{"version":3,"sources":["components/Person.js","services/persons.js","App.js","index.js"],"names":["Person","person","remove","className","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","errorMessage","setErrorMessage","useEffect","personService","initialPersons","catch","error","setTimeout","Notification","message","onSubmit","event","preventDefault","personObject","console","log","some","window","alert","returnedPerson","concat","value","onChange","target","type","map","find","p","filter","deletePersonById","ReactDOM","render","document","getElementById"],"mappings":"qNAWeA,EATA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OACrB,OACA,wBAAIC,UAAY,SAASC,IAAOH,EAAOI,IAClCJ,EAAOK,KADZ,IACmBL,EAAOM,OACtB,4BAAQC,QAAWN,GAAnB,c,gBCJFO,EAAU,oCAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EALA,SAACT,GAEZ,OADgBK,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BJ,IAC5BO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC+F5BI,EA/GL,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACNC,EADM,KACGC,EADH,OAEkBF,mBAAS,IAF3B,mBAENG,EAFM,KAEGC,EAFH,OAGsBJ,mBAAS,IAH/B,mBAGNK,EAHM,KAGKC,EAHL,OAI2BN,mBAAS,MAJpC,mBAINO,EAJM,KAIQC,EAJR,KAoBdC,qBAda,WACXC,IAEGjB,MAAK,SAAAkB,GACJT,EAAWS,MAEZC,OAAM,SAAAC,GACLL,EAAgB,kBAChBM,YAAW,WACTN,EAAgB,QACf,UAIO,IAEhB,IAAMO,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGP,yBAAKhC,UAAY,SACdgC,IA8DP,OACE,6BACE,yCACA,kBAACD,EAAD,CAAcC,QAAWT,IACzB,0BAAMU,SA9DQ,SAACC,GACfA,EAAMC,iBAIN,IAAMC,EAAe,CACjBjC,KAAMgB,EACNf,OAAQiB,GAIZgB,QAAQC,IAAI,oBAAqBF,GAEjBnB,EAAQsB,MAAK,SAAAzC,GAAM,OAAIA,EAAOK,OAASgB,KAGnDqB,OAAOC,MAAP,UAAgBtB,EAAhB,6BAEFO,EACUU,GACP3B,MAAK,SAAAiC,GACJxB,EAAWD,EAAQ0B,OAAOD,IAC1BtB,EAAW,IACXE,EAAa,IACbE,EAAgB,UAAD,OAAWL,IAC1BW,YAAW,WACTN,EAAgB,QACf,QAEJI,OAAM,SAAAC,GACLQ,QAAQC,IAAI,OAAQT,QAiCxB,uCAAY,2BAAOe,MAASzB,EAAS0B,SAblB,SAACX,GACtBd,EAAWc,EAAMY,OAAOF,UAYtB,KACA,yCAAc,2BAAOA,MAASvB,EAAWwB,SAVpB,SAACX,GACxBZ,EAAaY,EAAMY,OAAOF,UASxB,KACA,6BACE,4BAAQG,KAAK,UAAb,SAGJ,uCACA,4BACC9B,EAAQ+B,KAAI,SAAClD,GAAD,OACX,kBAAC,EAAD,CAAQG,IAAOH,EAAOI,GAAIJ,OAAUA,EAAQC,OAAU,kBAtCnC,SAACG,GACxB,IAAMJ,EAASmB,EAAQgC,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAOA,KAC1CwB,EACUxB,GACPO,MAAK,SAAAC,GACJQ,EAAWD,EAAQkC,QAAO,SAAAD,GAAC,OAAIA,EAAEhD,KAAOA,MACxCmC,QAAQC,IAAI,sBAAuBxC,MAEpC8B,OAAM,SAAAC,GACFA,EAAMnB,UACP2B,QAAQC,IAAIT,EAAMnB,SAASC,SA4B+ByC,CAAiBtD,EAAOI,a,MCxG9FmD,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.1a211c0d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, remove}) => {\n    return(\n    <li className = \"person\" key = {person.id}>\n        {person.name} {person.number}\n        <button onClick = {remove}> delete </button>\n    </li>\n    )\n}\n\nexport default Person","import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (name, newObject) => {\n    const request = axios.put(`${baseUrl}/${name}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","\nimport React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/persons'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ errorMessage, setErrorMessage] = useState(null)\n\n    const hook = () => {\n      personService\n        .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n        .catch(error => {\n          setErrorMessage(\"Error occurred\")\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n\n    useEffect(hook, [])\n\n    const Notification = ({ message }) => {\n      if (message === null) {\n        return null\n      }\n      return (\n        <div className = \"error\">\n          {message}\n        </div>\n      )}\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        \n        //let idmax = persons.reduce((maxId, person) => Math.max(maxId, person.id), 0)\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n            //id: idmax + 1\n        }\n\n        console.log(\"Addind a person: \", personObject)\n    \n        let duplicate = persons.some(person => person.name === newName)\n\n        if(duplicate) {\n            window.alert(`${newName} is already in phonebook`)\n        }else{\n          personService\n            .create(personObject)\n            .then(returnedPerson => {\n              setPersons(persons.concat(returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              setErrorMessage(`Added '${newName}`)\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              console.log('fail', error)\n            })\n        }}\n\n    const deletePersonById = (id) => {\n      const person = persons.find(p => p.id === id)\n      personService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          console.log(\"Deleting a person: \", person)\n        })\n        .catch(error => {\n          if(error.response) {\n            console.log(error.response.data)\n          }\n        })\n    }\n    \n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n  \n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Notification message = {errorMessage} />\n        <form onSubmit = {addPerson}>\n          <div> name: <input value = {newName} onChange = {handleNameChange}/> </div>\n          <div> number: <input value = {newNumber} onChange = {handleNumberChange} /> </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        <h2>Numbers</h2>\n        <ul>\n        {persons.map((person) =>\n          <Person key = {person.id} person = {person} remove = {() => deletePersonById(person.id)}/>\n        )}\n        </ul>\n      </div>\n    )\n  }\n  \n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}